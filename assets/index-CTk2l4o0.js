(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function l(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=l(e);fetch(e.href,t)}})();let u="./projects.json";async function p(){try{const o=await fetch(u);if(!o.ok)throw new Error("http error"+o.status);return o.json()}catch(o){console.log(o)}}async function f(){const o=await p(),r=document.querySelector(".projects_list");document.querySelector(".preview-image");const l=document.querySelector(".description"),i=document.querySelector(".tech_stack"),e=document.querySelector(".live-link"),t=document.querySelector(".code-link"),c=document.querySelector("#project-video");o.forEach((s,a)=>{const n=document.createElement("li");n.innerHTML=`
            <span class="sr-no">${a+1}</spam>
            <spam class="project-name">${s.name}</span>
            <div class="image_con">
                <img src="${s.image}" alt="Project image" class="hidden-image">
            </div>
        `,n.addEventListener("click",()=>{l.textContent=s.description,i.textContent=s.tech,e.href=s.live,t.href=s.code,c.src=s.video,c.parentElement.load(),console.log(c),r.querySelectorAll("li").forEach(d=>{d.classList.remove("highlighted")}),n.classList.add("highlighted")}),r.appendChild(n)}),o.length>0&&r.querySelector("li").click()}f();
