(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function i(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=i(e);fetch(e.href,t)}})();let d="/projects.json";async function u(){try{const r=await fetch(d);if(!r.ok)throw new Error("http error"+r.status);return r.json()}catch(r){console.log(r)}}async function f(){const r=await u(),o=document.querySelector(".projects_list"),i=document.querySelector(".preview-image"),n=document.querySelector(".description"),e=document.querySelector(".tech_stack"),t=document.querySelector(".live-link"),s=document.querySelector(".code-link");r.forEach((c,l)=>{const a=document.createElement("li");a.innerHTML=`
            <span class="sr-no">${l+1}</spam>
            <spam class="project-name">${c.name}</span>
            <div class="image_con">
                <img src="${c.image}" alt="Project image" class="hidden-image">
            </div>
        `,a.addEventListener("click",()=>{i.src=c.image,n.textContent=c.description,e.textContent=c.tech,t.href=c.live,s.href=c.code}),o.appendChild(a)}),r.length>0&&o.querySelector("li").click()}f();
